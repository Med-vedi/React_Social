{"version":3,"sources":["components/Navbar/Navbar.module.css","components/Dialogs/Dialogs.module.css","components/Main/MyPosts/MyPosts.module.css","components/Main/ProfileInfo/ProfileInfo.module.css","components/Header/Header.module.css","components/Main/Profile.module.css","components/Main/MyPosts/Post/Post.module.css","components/Main/MyPosts/Post/Buttons.module.css","components/Images/logo.png","components/Images/ProfileImage.jpeg","components/Header/Header.jsx","components/Navbar/Navbar.jsx","components/Main/MyPosts/Post/Buttons.jsx","components/Main/MyPosts/Post/Post.jsx","components/Main/MyPosts/MyPosts.jsx","components/Main/ProfileInfo/ProfileInfo.jsx","components/Main/Profile.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Dialogs.jsx","components/Navbar/Music/Music.jsx","components/Navbar/News/News.jsx","components/Navbar/Settings/Settings.jsx","App.js","Redux/state.js","render.js","serviceWorker.js","index.js"],"names":["module","exports","nav","item","ava_nav_item","avatar_dialog","dialogs","dialogs_items","dialog","dialog_name","messages","message","posts_block","posts","description_block","header","brand_logo","active","buttonLike","__webpack_require__","p","Header","react_default","a","createElement","className","s","href","src","require","alt","Navbar","concat","ava_nav","LikeButton","props","Post","msg","likesCount","Buttons","MyPosts","postsElements","map","MyPosts_Post_Post","newPostElement","React","createRef","onChange","text","current","value","updateNewPostText","ref","newPostText","onClick","addPost","post","ProfileInfo","app_wrapper_content","width","Profile","Main_ProfileInfo_ProfileInfo","Main_MyPosts_MyPosts","profilePage","Message","DialogItem","path","id","react_router_dom","to","name","Dialogs","dialogsElements","state","d","Dialogs_DialogItem_DialogItem","messagesElements","m","Dialogs_Message_Message","Music","News","Settings","App","components_Header_Header","components_Navbar_Navbar","react_router","render","components_Dialogs_Dialogs","dialogsPage","Main_Profile","Navbar_Music_Music","Navbar_News_News","Navbar_Settings_Settings","sidebar","newPost","push","rerenderEntireTree","newText","ReactDOM","src_App_0","document","getElementById","Boolean","window","location","hostname","match","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.57e0c141.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2m0rn\",\"item\":\"Navbar_item__2jmES\",\"ava_nav_item\":\"Navbar_ava_nav_item__2zJ3N\",\"avatar_dialog\":\"Navbar_avatar_dialog__1zHwL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__22Xzi\",\"dialogs_items\":\"Dialogs_dialogs_items__2qX5u\",\"dialog\":\"Dialogs_dialog__2nQeT\",\"dialog_name\":\"Dialogs_dialog_name__26dj1\",\"avatar_dialog\":\"Dialogs_avatar_dialog__2YRTz\",\"messages\":\"Dialogs_messages__1gGUz\",\"message\":\"Dialogs_message__ccXnd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts_block\":\"MyPosts_posts_block__3wsOi\",\"posts\":\"MyPosts_posts__2LyAN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ProfileInfo_item__3R8P1\",\"description_block\":\"ProfileInfo_description_block__2-qFb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__39dxW\",\"brand_logo\":\"Header_brand_logo__Q7A6H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Profile_item__2ryN7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3Yqo1\",\"active\":\"Post_active__bHNad\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonLike\":\"Buttons_buttonLike__lHEeF\"};","module.exports = __webpack_public_path__ + \"static/media/logo.dd6ff1ee.png\";","module.exports = __webpack_public_path__ + \"static/media/ProfileImage.d2287bb6.jpeg\";","import React from 'react';\r\nimport s from './Header.module.css';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className={s.header}>\r\n            <img href=\"#\" src={require('../Images/logo.png')} alt=\"logo\" className={s.brand_logo}/>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport s from \"./Navbar.module.css\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className={s.nav}>\r\n      <div className={s.item}>\r\n        <a href=\"/profile\">Profile</a>\r\n      </div>\r\n      <div className={s.item}>\r\n        <a href=\"/dialogs\">Messages</a>\r\n      </div>\r\n      <div className={`${s.item} ${s.active}`}>\r\n        <a href=\"/news\">News</a>\r\n      </div>\r\n      <div className={s.item}>\r\n        <a href=\"/music\">Music</a>\r\n      </div>\r\n      <div className={s.item}>\r\n        <a href=\"/settings\">Settings</a>\r\n      </div>\r\n      <div className={s.ava_nav}>\r\n        <div className={s.ava_nav_item}>\r\n          <img\r\n            className={s.avatar_dialog}\r\n            src=\"https://www.chiechiera.it/wp-content/uploads/2019/11/avatar.jpg\"\r\n            alt=\"\"\r\n          />\r\n          <span>Joe</span>\r\n        </div>\r\n        <div className={s.ava_nav_item}>\r\n          <img\r\n            className={s.avatar_dialog}\r\n            src=\"https://www.chiechiera.it/wp-content/uploads/2019/11/avatar.jpg\"\r\n            alt=\"\"\r\n          />\r\n          <span>Joe</span>\r\n        </div>\r\n        <div className={s.ava_nav_item}>\r\n          <img\r\n            className={s.avatar_dialog}\r\n            src=\"https://www.chiechiera.it/wp-content/uploads/2019/11/avatar.jpg\"\r\n            alt=\"\"\r\n          />\r\n          <span>Joe</span>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport s from \"./Buttons.module.css\";\r\n\r\n\r\nconst LikeButton = (props) => {\r\n  return (\r\n      <div className='LikesCounter'>\r\n        \r\n        <button className={s.buttonLike}>Like</button> \r\n      </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default LikeButton;\r\n","import React from \"react\";\r\nimport s from \"./Post.module.css\";\r\nimport LikeButton from \"./Buttons\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img\r\n        src=\"https://www.chiechiera.it/wp-content/uploads/2019/11/avatar.jpg\"\r\n        alt=\"\"\r\n      />\r\n      {props.msg}\r\n      <div>\r\n        {props.likesCount}\r\n        <LikeButton />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\n\r\nconst MyPosts = props => {\r\n  let postsElements = props.posts.map(p => (\r\n    <Post msg={p.msg} likesCount={p.likesCount} />\r\n  ));\r\n  \r\n  let newPostElement = React.createRef();\r\n\r\n  let addPost = () => {\r\n    // debugger;\r\n    props.addPost();\r\n  };\r\n  let onPostChange = () => {\r\n    let text = newPostElement.current.value;\r\n    props.updateNewPostText(text);\r\n  };\r\n\r\n  \r\n  return (\r\n    <div className={`${s.item} ${s.posts_block}`}>\r\n      <h3>My posts</h3>\r\n      <div>\r\n        <div>\r\n          <textarea\r\n            onChange={onPostChange}\r\n            ref={newPostElement}\r\n            value={props.newPostText}\r\n          />\r\n        </div>\r\n        <div>\r\n          <button onClick={addPost}>Add Post</button>\r\n        </div>\r\n      </div>\r\n      <div className={s.post}>\r\n        <div>{postsElements}</div>\r\n        {/* <div>\r\n          <Post msg={postsData[1].message} likesCount={postsData[1].likesCount} />\r\n        </div>\r\n */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyPosts;\r\n","import React from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\n\r\nconst ProfileInfo = () => {\r\n  return (\r\n    <div className={s.app_wrapper_content}>\r\n      <div>\r\n        <img src={require(\"../../Images/ProfileImage.jpeg\")} width=\"60%\" alt=\"img\"/>\r\n      </div>\r\n      <div className={`${s.item} ${s.description_block}`}>ava + description</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport s from \"./Profile.module.css\";\r\nimport MyPosts from \"./MyPosts/MyPosts\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = props => {\r\n\r\n  return (\r\n    <div className={s.app_wrapper_content}>\r\n      <ProfileInfo />\r\n      <MyPosts\r\n        posts={props.profilePage.posts}\r\n        newPostText={props.profilePage.newPostText}\r\n        updateNewPostText={props.updateNewPostText}\r\n        addPost={props.addPost}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport s from \"./../Dialogs.module.css\";\r\n\r\nconst Message = (props) => {\r\n  return (\r\n    <div className={s.message}>\r\n      <textarea>{props.message}</textarea>\r\n      <button>Send</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport s from \"../../Dialogs/Dialogs.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n  let path = \"/dialogs/\" + props.id;\r\n  return (\r\n    <div className={s.dialog}>\r\n      <NavLink className={s.dialog_name} to={path}>\r\n        <img className={s.avatar_dialog} src=\"https://www.chiechiera.it/wp-content/uploads/2019/11/avatar.jpg\"\r\n              alt=\"\"/>\r\n        <span>{props.name}{\" \"}</span>\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default DialogItem;\r\n","import React from \"react\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport Message from \"../Dialogs/Message/Message\"\r\nimport DialogItem from \"../Dialogs/DialogItem/DialogItem\"\r\n\r\nconst Dialogs = (props) => {\r\n  \r\n  let dialogsElements = props.state.dialogs.map( d => <DialogItem name={d.name} id={d.id} /> ); \r\n  // ---------------------------------------------[<DialogItem name={dialogsData[0].name} id={dialogsData[0].id} />,\r\n\r\n  let messagesElements = props.state.messages.map ( m => <Message message={m.message} />)\r\n  // ----------------------------------------// <Message message={messageData[1].message} />\r\n  \r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogs_items}>\r\n        {dialogsElements}\r\n{/* before the ref<DialogItem name={dialogsData[0].name} id={dialogsData[0].id} />, */}\r\n      </div>\r\n      \r\n      <div className={s.messages}>\r\n        {/* <textarea></textarea>\r\n        <button>Send</button> */}\r\n        {messagesElements}\r\n       \r\n\r\n{/* before the ref <Message message={messageData[4].message} /> */}\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dialogs;\r\n","import React from \"react\";\r\nimport s from \"./Music.module.css\";\r\n\r\nconst Music = () => {\r\n  return <div className={s.app_wrapper_content}>Music</div>;\r\n};\r\n\r\nexport default Music;\r\n","import React from \"react\";\r\nimport s from \"./News.module.css\";\r\n\r\n\r\nconst News = () => {\r\n  return (\r\n    <div className={s.app_wrapper_content}>\r\n        News\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default News;","import React from \"react\";\r\nimport s from \"./Settings.module.css\";\r\n\r\n\r\nconst Settings = () => {\r\n  return (\r\n    <div className={s.app_wrapper_content}>\r\n        Settings\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n\r\n","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport Header from \"./components/Header/Header\";\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport Profile from \"./components/Main/Profile\";\r\nimport Dialogs from \"./components/Dialogs/Dialogs\";\r\nimport Music from \"./components/Navbar/Music/Music\";\r\nimport News from \"./components/Navbar/News/News\";\r\nimport Settings from \"./components/Navbar/Settings/Settings\";\r\n\r\nconst App = props => {\r\n  return (\r\n    <div className=\"app_wrapper\">\r\n      <Header />\r\n      <Navbar />\r\n      <div className=\"app_wrapper_content\">\r\n        {/* <Route path='/dialogs' component={Dialogs} /> */}\r\n\r\n        <Route\r\n          path=\"/dialogs\"\r\n          render={() => <Dialogs state={props.state.dialogsPage} />}\r\n        />\r\n        <Route\r\n          path=\"/profile\"\r\n          render={() => (\r\n            <Profile \r\n            profilePage={props.state.profilePage} \r\n            updateNewPostText={props.updateNewPostText}\r\n            addPost={props.addPost} />\r\n          )}\r\n        />\r\n        <Route path=\"/music\" render={() => <Music />} />\r\n        <Route path=\"/news\" render={() => <News />} />\r\n        <Route path=\"/settings\" render={() => <Settings />} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import {rerenderEntireTree} from '../render'\r\n\r\nlet state = { \r\n    profilePage: {\r\n        posts: [\r\n            { msg: \"Hi, how are you?\", likesCount: \"10\" },\r\n            { msg: \"It's  first post\", likesCount: \"14\" },\r\n            { msg: \"It's my first \", likesCount: \"1\" },\r\n            { msg: \"It's my first post\", likesCount: \"0\" },\r\n            { msg: \"It's  post\", likesCount: \"54\" },\r\n            { msg: \" my \", likesCount: \"4\" }\r\n        ],\r\n        newPostText: ' '\r\n\r\n\r\n    \r\n    },\r\n    dialogsPage: {\r\n        messages: [\r\n            { message: \"Hi\" },\r\n            { message: \"Sup\" },\r\n            { message: \"Sup\" },\r\n            { message: \"Sup\" },\r\n            { message: \"Sup\" },\r\n            { message: \"Ya\" }\r\n        ],\r\n        dialogs: [\r\n            { id: 1, name: \"Nazar\" },\r\n            { id: 2, name: \"Ilia\" },\r\n            { id: 3, name: \"Olesea\" },\r\n            { id: 4, name: \"Guf\" },\r\n            { id: 5, name: \"Nazar\" },\r\n            { id: 6, name: \"Vlad\" }\r\n        ]\r\n    },\r\n    sidebar: {},\r\n}\r\nexport let addPost = () => {\r\n    // debugger;\r\n    let newPost = {\r\n        id: 5,\r\n        msg: state.profilePage.newPostText,\r\n        likesCount: 0\r\n    };\r\n\r\n    state.profilePage.posts.push(newPost);\r\n    state.profilePage.newPostText=' ';\r\n    rerenderEntireTree(state);\r\n}\r\n\r\nexport let updateNewPostText = (newText) => {\r\n    // debugger;\r\n\r\n    state.profilePage.newPostText = newText;\r\n    rerenderEntireTree(state);\r\n}\r\nexport default state;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { addPost, updateNewPostText } from \"./Redux/state\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nexport let rerenderEntireTree = (state) => {\r\n  ReactDOM.render(\r\n    <BrowserRouter>\r\n      <App \r\n      state={state} \r\n      updateNewPostText={updateNewPostText}\r\n      addPost={addPost} />\r\n    </BrowserRouter>,\r\n    document.getElementById(\"root\")\r\n  );\r\n};\r\n\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import {rerenderEntireTree} from './render'\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport state from './Redux/state'\r\n\r\n\r\nrerenderEntireTree(state);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}